"""Generate a password hash for a user.

Steps:
1. Run the script: `python scripts/generate_password.py`.
2. Take the output and put it in the database.
3. Communicate the password to the user over a secure channel.
"""

import argparse
import secrets
import string

import bcrypt

PASSWORD_LENGTH = 12

# Parse the command line arguments.
parser = argparse.ArgumentParser(description="Password Generator")
parser.add_argument(
    "--auto",
    action="store_true",
    help="Do not ask user to provide a password.",
)
arguments = parser.parse_args()

# Ask user input.
password = None
if not arguments.auto:
    password = input("Please enter your password, leave empty for autogenerated: ")

# Generate a password if the user did not provide one.
if not password:
    # import the string and random modules
    alphabet = string.ascii_letters + string.digits + string.punctuation
    password = "".join([secrets.choice(alphabet) for _ in range(PASSWORD_LENGTH)])
    # display the generated password to the user
    print(f"Your password is: {password}")  # noqa: T201 - Print.

# Hash the password.
password_hash = bcrypt.hashpw(password.encode(), bcrypt.gensalt()).decode()
print(f"The corresponding hash is: {password_hash}")  # noqa: T201 - Print.
